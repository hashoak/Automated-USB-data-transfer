#!/usr/bin/sh

if [ $USER != "root" ]
  then echo "Please run as root"
  exit 1
fi

echo "==================\e[1;32m Setup Started \e[0m=================="

dir=$(dirname $(pwd))
conf="$dir/Data/conf"
serial=$(dmidecode -s system-serial-number)

if [ ! -f "$conf" ]; then                   # If config file doesn't exist,
    printf "Config file created...\n"
    mkdir -p $dir/Data                      # create one and put default
    echo 60 > $conf                         # timeout value of 60 sec.
else
    echo "Config file found..."
fi

this=$(grep -oE "[1-2]-$serial" $conf)
if [ $this ]; then this=$(echo $this | cut -c 1)
elif [ ! $(grep "1-" $conf) ]; then this=1      # Check which numbers are
elif [ ! $(grep "2-" $conf) ]; then this=2      # occupied and which are
else                                            # not. And assign a
    echo "All system numbers occupied..."       # number to this PC. 
    tail +2 "$conf"
    while [ "$this" != 1 -a "$this" != 2 ]; do                      # If both the numbers
        echo -n "Choose which system to replace (1/2): "; read this # are occupied, ask 
    done                                                            # which PC to replace.
    printf "$(grep -v "$this-" $conf)\n" > $conf
fi
echo "System numbered as $this..."
[ ! $(grep $this $conf) ] && echo "$this-$serial" >> $conf  # Add the PC to conf file.

rulefile="/etc/udev/rules.d/99-usb.rules"
trigfile="/usr/local/bin/trigger.sh"
local="/home/$SUDO_USER/PC-$this""_Data"

for old in $(ls -d /home/$SUDO_USER/* | grep -oE ".*/PC-[1-2]_Data$"); do   # If any directories exists,
    [ $old != $local ] && mv $old $old"_Old"; done                          # rename them with old number.

echo "Directory of Udev Rule file: $rulefile"
echo "Directory of Trigger Script file: $trigfile"
echo "Directory of Local Storage folder: $local"

mkdir -m 777 -p $local/Send                 # Create local send and
mkdir -m 777 -p $local/Recv                 # recieve directories.
touch $local/History
echo "Local Directory created..."

mkdir -p "$dir/Data/1-to-2"                 # Make this PC to other PC dir
mkdir -p "$dir/Data/2-to-1"                 # and other PC to this PC dir.
echo "Transfer Directory created..."

touch "$dir/Data/1-to-2/todelete"           # Create todelete files in both
# chmod -777 "$dir/Data/1-to-2/todelete"
touch "$dir/Data/2-to-1/todelete"           # 1-to-2 and 2-to-1 directories.
# chmod -777 "$dir/Data/2-to-1/todelete"
echo "todelete files created..."

filesys=$(findmnt -no SOURCE $dir)
serial=$(udevadm info $filesys | grep "ID_SERIAL=" | cut -c 14-)

echo "Device location: $filesys"
echo "Device Serial ID: $serial"

ruledata=$(printf "ACTION==\"add\", KERNEL==\"sd[a-z]1\", \
                  ENV{ID_SERIAL}==\"$serial\", \
                  RUN+=\"/usr/local/bin/trigger.sh '/dev/%%k' & wait\"")
                  
echo $ruledata > $rulefile                  # Create Rule file
echo "Rule file created..."
cat code > $trigfile                        # Create Trig file
sed -i "s@LOCAL@\"$local\"@" $trigfile      # Assign local dir in Trig file
chmod +x $trigfile                          # Make file executable
echo "Trigger script created..."

udevadm control -R                          # Reload the Udev rules
echo "Udev rules reloaded..."

echo "==================\e[1;31m Setup Successful \e[0m=================="
